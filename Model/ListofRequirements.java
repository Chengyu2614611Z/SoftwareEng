package Model;

import java.util.ArrayList;
import java.util.Iterator;

// Generated by Class Director
public class ListofRequirements {

	// to store all teaching requirements
	private ArrayList<Course> listofClassRequirements = new ArrayList<>();
	private Iterator<Course> it;

	public ListofRequirements() {

	}

	public ArrayList<Course> getListOfClassRequirements() {
		return this.listofClassRequirements;
	}

	public Iterator<Course> getit() {
		it = this.listofClassRequirements.iterator();
		return this.it;
	}

	public void add(Course requirement) {
		this.listofClassRequirements.add(requirement);
	}

	public void remove(Course subRequirement) {
		this.listofClassRequirements.remove(subRequirement);
	}

	public int requirementsRemaining() {
		this.print();
		return this.listofClassRequirements.size();
	}

	public String find(String search) { // See ClassDirector for find function to return Class
		for (Course curVal : listofClassRequirements) {
			if (curVal.getName().contains(search)) {
				curVal.print();
			}
		}
		return "Your search has returned empty...";
	}

	// return requirement(Course object) according to search keywords(course name)
	public Course searchClass(String currSearch) {
		for (Course selClass : this.listofClassRequirements) {
			if (selClass.getName().equals(currSearch)) {
				return selClass;
			}
		}
		return null;
	}

	// print all requirements
	public void print() {
		for (Course courses : listofClassRequirements) {
			courses.print();
		}
	}
}